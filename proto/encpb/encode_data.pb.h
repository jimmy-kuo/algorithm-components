// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encpb/encode_data.proto

#ifndef PROTOBUF_encpb_2fencode_5fdata_2eproto__INCLUDED
#define PROTOBUF_encpb_2fencode_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_encpb_2fencode_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsEncodeDataImpl();
void InitDefaultsEncodeData();
inline void InitDefaults() {
  InitDefaultsEncodeData();
}
}  // namespace protobuf_encpb_2fencode_5fdata_2eproto
namespace algocomp {
class EncodeData;
class EncodeDataDefaultTypeInternal;
extern EncodeDataDefaultTypeInternal _EncodeData_default_instance_;
}  // namespace algocomp
namespace algocomp {

// ===================================================================

class EncodeData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:algocomp.EncodeData) */ {
 public:
  EncodeData();
  virtual ~EncodeData();

  EncodeData(const EncodeData& from);

  inline EncodeData& operator=(const EncodeData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EncodeData(EncodeData&& from) noexcept
    : EncodeData() {
    *this = ::std::move(from);
  }

  inline EncodeData& operator=(EncodeData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const PROTOBUF_FINAL {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const PROTOBUF_FINAL {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const EncodeData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EncodeData* internal_default_instance() {
    return reinterpret_cast<const EncodeData*>(
               &_EncodeData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(EncodeData* other);
  void Swap(EncodeData* other);
  friend void swap(EncodeData& a, EncodeData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EncodeData* New() const PROTOBUF_FINAL { return New(NULL); }

  EncodeData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EncodeData& from);
  void MergeFrom(const EncodeData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EncodeData* other);
  protected:
  explicit EncodeData(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 enc = 1;
  void clear_enc();
  static const int kEncFieldNumber = 1;
  ::google::protobuf::int64 enc() const;
  void set_enc(::google::protobuf::int64 value);

  // float val = 2;
  void clear_val();
  static const int kValFieldNumber = 2;
  float val() const;
  void set_val(float value);

  // @@protoc_insertion_point(class_scope:algocomp.EncodeData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::int64 enc_;
  float val_;
  mutable int _cached_size_;
  friend struct ::protobuf_encpb_2fencode_5fdata_2eproto::TableStruct;
  friend void ::protobuf_encpb_2fencode_5fdata_2eproto::InitDefaultsEncodeDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EncodeData

// int64 enc = 1;
inline void EncodeData::clear_enc() {
  enc_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 EncodeData::enc() const {
  // @@protoc_insertion_point(field_get:algocomp.EncodeData.enc)
  return enc_;
}
inline void EncodeData::set_enc(::google::protobuf::int64 value) {
  
  enc_ = value;
  // @@protoc_insertion_point(field_set:algocomp.EncodeData.enc)
}

// float val = 2;
inline void EncodeData::clear_val() {
  val_ = 0;
}
inline float EncodeData::val() const {
  // @@protoc_insertion_point(field_get:algocomp.EncodeData.val)
  return val_;
}
inline void EncodeData::set_val(float value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:algocomp.EncodeData.val)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace algocomp

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_encpb_2fencode_5fdata_2eproto__INCLUDED
