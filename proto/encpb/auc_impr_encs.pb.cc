// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encpb/auc_impr_encs.proto

#include "encpb/auc_impr_encs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace algocomp {
class AUCImprEncsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AUCImprEncs>
      _instance;
} _AUCImprEncs_default_instance_;
}  // namespace algocomp
namespace protobuf_encpb_2fauc_5fimpr_5fencs_2eproto {
void InitDefaultsAUCImprEncsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_encpb_2fencode_5fbunch_2eproto::InitDefaultsEncodeBunch();
  {
    void* ptr = &::algocomp::_AUCImprEncs_default_instance_;
    new (ptr) ::algocomp::AUCImprEncs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::algocomp::AUCImprEncs::InitAsDefaultInstance();
}

void InitDefaultsAUCImprEncs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAUCImprEncsImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algocomp::AUCImprEncs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algocomp::AUCImprEncs, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algocomp::AUCImprEncs, weights_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algocomp::AUCImprEncs, scores_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algocomp::AUCImprEncs, encs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::algocomp::AUCImprEncs, feat_size_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::algocomp::AUCImprEncs)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::algocomp::_AUCImprEncs_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "encpb/auc_impr_encs.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031encpb/auc_impr_encs.proto\022\010algocomp\032\030e"
      "ncpb/encode_bunch.proto\"v\n\013AUCImprEncs\022\016"
      "\n\006labels\030\001 \003(\002\022\017\n\007weights\030\002 \003(\002\022\016\n\006score"
      "s\030\003 \003(\002\022#\n\004encs\030\004 \003(\0132\025.algocomp.EncodeB"
      "unch\022\021\n\tfeat_size\030\005 \001(\003B\036\n\010algocompB\rAUC"
      "ImprEncsPbP\001\370\001\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 223);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "encpb/auc_impr_encs.proto", &protobuf_RegisterTypes);
  ::protobuf_encpb_2fencode_5fbunch_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_encpb_2fauc_5fimpr_5fencs_2eproto
namespace algocomp {

// ===================================================================

void AUCImprEncs::InitAsDefaultInstance() {
}
void AUCImprEncs::clear_encs() {
  encs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AUCImprEncs::kLabelsFieldNumber;
const int AUCImprEncs::kWeightsFieldNumber;
const int AUCImprEncs::kScoresFieldNumber;
const int AUCImprEncs::kEncsFieldNumber;
const int AUCImprEncs::kFeatSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AUCImprEncs::AUCImprEncs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::InitDefaultsAUCImprEncs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:algocomp.AUCImprEncs)
}
AUCImprEncs::AUCImprEncs(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  labels_(arena),
  weights_(arena),
  scores_(arena),
  encs_(arena) {
  ::protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::InitDefaultsAUCImprEncs();
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:algocomp.AUCImprEncs)
}
AUCImprEncs::AUCImprEncs(const AUCImprEncs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      labels_(from.labels_),
      weights_(from.weights_),
      scores_(from.scores_),
      encs_(from.encs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  feat_size_ = from.feat_size_;
  // @@protoc_insertion_point(copy_constructor:algocomp.AUCImprEncs)
}

void AUCImprEncs::SharedCtor() {
  feat_size_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

AUCImprEncs::~AUCImprEncs() {
  // @@protoc_insertion_point(destructor:algocomp.AUCImprEncs)
  SharedDtor();
}

void AUCImprEncs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void AUCImprEncs::ArenaDtor(void* object) {
  AUCImprEncs* _this = reinterpret_cast< AUCImprEncs* >(object);
  (void)_this;
}
void AUCImprEncs::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void AUCImprEncs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AUCImprEncs::descriptor() {
  ::protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AUCImprEncs& AUCImprEncs::default_instance() {
  ::protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::InitDefaultsAUCImprEncs();
  return *internal_default_instance();
}

AUCImprEncs* AUCImprEncs::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<AUCImprEncs>(arena);
}

void AUCImprEncs::Clear() {
// @@protoc_insertion_point(message_clear_start:algocomp.AUCImprEncs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  labels_.Clear();
  weights_.Clear();
  scores_.Clear();
  encs_.Clear();
  feat_size_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AUCImprEncs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:algocomp.AUCImprEncs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float labels = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_labels())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_labels())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float weights = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_weights())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18u, input, this->mutable_weights())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float scores = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_scores())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 26u, input, this->mutable_scores())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .algocomp.EncodeBunch encs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_encs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 feat_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &feat_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:algocomp.AUCImprEncs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:algocomp.AUCImprEncs)
  return false;
#undef DO_
}

void AUCImprEncs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:algocomp.AUCImprEncs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float labels = 1;
  if (this->labels_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _labels_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->labels().data(), this->labels_size(), output);
  }

  // repeated float weights = 2;
  if (this->weights_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _weights_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->weights().data(), this->weights_size(), output);
  }

  // repeated float scores = 3;
  if (this->scores_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _scores_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->scores().data(), this->scores_size(), output);
  }

  // repeated .algocomp.EncodeBunch encs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->encs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->encs(static_cast<int>(i)), output);
  }

  // int64 feat_size = 5;
  if (this->feat_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->feat_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:algocomp.AUCImprEncs)
}

::google::protobuf::uint8* AUCImprEncs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:algocomp.AUCImprEncs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float labels = 1;
  if (this->labels_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _labels_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->labels_, target);
  }

  // repeated float weights = 2;
  if (this->weights_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _weights_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->weights_, target);
  }

  // repeated float scores = 3;
  if (this->scores_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _scores_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->scores_, target);
  }

  // repeated .algocomp.EncodeBunch encs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->encs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->encs(static_cast<int>(i)), deterministic, target);
  }

  // int64 feat_size = 5;
  if (this->feat_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->feat_size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:algocomp.AUCImprEncs)
  return target;
}

size_t AUCImprEncs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:algocomp.AUCImprEncs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float labels = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->labels_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _labels_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float weights = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->weights_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _weights_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float scores = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->scores_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scores_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .algocomp.EncodeBunch encs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->encs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->encs(static_cast<int>(i)));
    }
  }

  // int64 feat_size = 5;
  if (this->feat_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->feat_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AUCImprEncs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:algocomp.AUCImprEncs)
  GOOGLE_DCHECK_NE(&from, this);
  const AUCImprEncs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AUCImprEncs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:algocomp.AUCImprEncs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:algocomp.AUCImprEncs)
    MergeFrom(*source);
  }
}

void AUCImprEncs::MergeFrom(const AUCImprEncs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:algocomp.AUCImprEncs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  labels_.MergeFrom(from.labels_);
  weights_.MergeFrom(from.weights_);
  scores_.MergeFrom(from.scores_);
  encs_.MergeFrom(from.encs_);
  if (from.feat_size() != 0) {
    set_feat_size(from.feat_size());
  }
}

void AUCImprEncs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:algocomp.AUCImprEncs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AUCImprEncs::CopyFrom(const AUCImprEncs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:algocomp.AUCImprEncs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AUCImprEncs::IsInitialized() const {
  return true;
}

void AUCImprEncs::Swap(AUCImprEncs* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    AUCImprEncs* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void AUCImprEncs::UnsafeArenaSwap(AUCImprEncs* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void AUCImprEncs::InternalSwap(AUCImprEncs* other) {
  using std::swap;
  labels_.InternalSwap(&other->labels_);
  weights_.InternalSwap(&other->weights_);
  scores_.InternalSwap(&other->scores_);
  encs_.InternalSwap(&other->encs_);
  swap(feat_size_, other->feat_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AUCImprEncs::GetMetadata() const {
  protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_encpb_2fauc_5fimpr_5fencs_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace algocomp

// @@protoc_insertion_point(global_scope)
